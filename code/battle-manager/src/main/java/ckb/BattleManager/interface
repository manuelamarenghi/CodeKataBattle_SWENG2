Battle
// get a battle
Battle getBattle(Integer id)

// get all the battles of a tournament
List<Battle> getBattleOfTournament(Long idTournament)

// create a new Battle
void createBattle(Battle battle)

// the student is registered to the battle (id_battle), create a new team with only the student
void joinBattle(Integer id_battle, Integer id_student)

// the student wants to leave the battle, delete the record in participation and if the team has 0 members
// delete also the team
void leaveBattle(Integer id_battle, Integer id_student)

Team
// get a team
Team getTeam(Integer id_team)

// get the list of teams that participate to a battle
List<Team> getTeams(Integer id_battle)

// register the user id_user in team id_team
void registerTeam(Integer id_team, Integer id_user)

// send a mail to the user inviting him/her to the team
void inviteStudent(Integer id_team, Integer id_user)

// create a new team with id_user
void createTeam(Integer id_user)

Assign score
// assign a score to the team
void assignScore(Integer id_team, Integer points)

// assign a personal score to the team
void assignPersonalScore(Integer team_id, int score)


// Data = toString + EqualsAndHashCode + getter + setter + requiredArgsConstructor